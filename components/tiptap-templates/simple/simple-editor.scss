@import url("https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");

body {
  --tt-toolbar-height: 44px;
  --tt-theme-text: var(--tt-gray-light-900);

  .dark & {
    --tt-theme-text: var(--tt-gray-dark-900);
  }
}

body {
  font-family: "Inter", sans-serif;
  color: var(--tt-theme-text);
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
  padding: 0;
}

html,
body,
#root,
#app {
  height: 100%;
  background-color: var(--tt-bg-color);
}

body {
  overflow: hidden;
}

/* 에디터 전체 컨테이너 - 높이 제한 없앰 */
.editor-container {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 690px; /* ← 부모 높이를 가득 채우도록 */
  background-color: white;
  border: 1px solid #e1e2e4;
  border-radius: 0.5rem;
  overflow: hidden;
}

/* 콘텐츠 래퍼 영역 - 자동 높이 적용 */
.content-wrapper {
  flex: 1; /* ← 남는 공간 전부 차지 */
  min-height: 0; /* ← overflow 동작을 위해 꼭 필요 */
  overflow-y: auto;
}

/* 에디터 콘텐츠 영역 */
.simple-editor-content {
  max-width: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  flex-grow: 1; /* flex-grow는 부모가 flex container가 아니면 높이에 영향을 주지 않음 */
  height: 100%; /* 추가: 부모(.content-wrapper)의 높이를 채움 */
  min-height: 0; /* 추가: flex 아이템의 최소 높이 설정 */
}

/* ProseMirror 에디터 직접 타겟팅 */
.tiptap.ProseMirror,
div[contenteditable="true"] {
  flex: 1 !important; /* ← 가로·세로 모두 채우기 (.simple-editor-content가 flex container이므로) */
  height: 100% !important; /* ← wrapper 높이에 맞추기 */
  min-height: 0 !important; /* ← 고정 min-height 제거 */
  padding: 1rem 1.25rem;
  font-family: "DM Sans", sans-serif;
  line-height: 1 !important;
  overflow: visible;
  box-sizing: border-box;
}

.tiptap.ProseMirror p {
  line-height: 0.45 !important;
  margin-bottom: 0.5em;
}

/* 드롭다운 스타일 */
.tiptap-dropdown-menu {
  min-width: 140px;
  width: auto;

  [role="menuitem"] {
    width: 100% !important;
    padding-left: 17px !important;
    cursor: pointer;

    &:hover {
      background-color: rgba(0, 0, 0, 0.05);
    }

    button {
      width: 100% !important;
      padding: 8px 12px !important;
      justify-content: flex-start !important;
      text-align: left !important;
      background: none !important;

      &:hover {
        background-color: transparent !important;
      }
    }
  }
}

/* 툴바 영역 */
.tiptap-toolbar {
  flex-shrink: 0;
}

.tiptap-toolbar-group {
  display: flex;
  justify-content: flex-start !important;
  flex-wrap: wrap;
}

.tiptap-button-icon {
  width: 20px !important;
  height: 20px !important;
}

button[data-style] {
  width: 36px !important;
  height: 36px !important;
}

.tiptap-dropdown-button {
  height: 36px !important;
  font-size: 15px !important;
}

/* simple-editor.scss에서 확인/추가 */
.tiptap-color-button {
  pointer-events: auto !important; /* 클릭 이벤트 허용 */
  cursor: pointer !important;
}

/* 드롭다운 메뉴 아이템도 확인 */
.tiptap-dropdown-menu [role="menuitem"] {
  pointer-events: auto !important;
  cursor: pointer !important;

  button {
    pointer-events: auto !important;
    cursor: pointer !important;
  }
}

/* 이미지 리사이즈 스타일 */
.resizable-image {
  max-width: 100%;
  height: auto;
  border: 2px solid transparent;
  cursor: pointer;
  transition: border-color 0.2s ease;
  resize: both;
  overflow: auto;
  min-width: 50px;
  min-height: 50px;

  &:hover {
    border-color: #3b82f6;
    border-style: dashed;
  }

  &.ProseMirror-selectednode,
  &:focus,
  &[data-selected="true"],
  &.selected-image {
    border-color: #3b82f6 !important;
    border-style: solid !important;
    outline: none !important;
    position: relative;
  }
}

/* 선택된 이미지 리사이즈 핸들 - 간단한 선택자 */
img.resizable-image[data-selected="true"],
img.resizable-image.selected-image,
img.resizable-image.ProseMirror-selectednode {
  position: relative !important;
}

img.resizable-image[data-selected="true"]::after,
img.resizable-image.selected-image::after,
img.resizable-image.ProseMirror-selectednode::after {
  content: "↘" !important;
  position: absolute !important;
  bottom: -10px !important;
  right: -10px !important;
  width: 20px !important;
  height: 20px !important;
  background: #3b82f6 !important;
  border: 2px solid white !important;
  border-radius: 50% !important;
  cursor: nw-resize !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15) !important;
  z-index: 9999 !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  font-size: 12px !important;
  color: white !important;
  font-weight: bold !important;
  pointer-events: none !important;
}

img.resizable-image[data-selected="true"]::before,
img.resizable-image.selected-image::before,
img.resizable-image.ProseMirror-selectednode::before {
  content: "↖" !important;
  position: absolute !important;
  top: -10px !important;
  left: -10px !important;
  width: 20px !important;
  height: 20px !important;
  background: #3b82f6 !important;
  border: 2px solid white !important;
  border-radius: 50% !important;
  cursor: nw-resize !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15) !important;
  z-index: 9999 !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  font-size: 12px !important;
  color: white !important;
  font-weight: bold !important;
  pointer-events: none !important;
}

/* 드래그 중일 때 스타일 */
.ProseMirror img.resizable-image:active {
  border-color: #1d4ed8 !important;
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
}

/* 호버 시 핸들 미리보기 */
.ProseMirror img.resizable-image:hover::after {
  content: "↘" !important;
  position: absolute !important;
  bottom: -10px !important;
  right: -10px !important;
  width: 20px !important;
  height: 20px !important;
  background: rgba(59, 130, 246, 0.7) !important;
  border: 2px solid white !important;
  border-radius: 50% !important;
  cursor: nw-resize !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15) !important;
  z-index: 9999 !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  font-size: 12px !important;
  color: white !important;
  font-weight: bold !important;
  pointer-events: none !important;
}
